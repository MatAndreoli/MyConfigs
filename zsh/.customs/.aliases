#!/bin/sh

alias zshrc='source ~/.zshrc'
alias _='sudo'
alias home='cd ~'
alias ..='cd ..'
alias .2='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'
alias la='ls -a'
alias ll='ls -al'
nv() {
  if [[ -d "$1" ]]; then
    nvim --cmd "cd $1"
    return
  fi
  nvim $1
}
alias nvrc='nv ~/MyConfigs/nvim/.config/nvim/'
alias tmuxrc='nv ~/MyConfigs/tmux/.tmux.conf'
alias nzshrc='nv ~/MyConfigs/zsh'
alias spfrc='nv ~/MyConfigs/superfile/.config/superfile/config.toml'
alias lgrc='nv ~/MyConfigs/lazygit/.config/lazygit/config.yml'

# Updates
alias update='_ apt update && _ apt list --upgradable'
alias upgrade='update && _ apt upgrade'
alias autoremove='_ apt autoremove'

# WSL
alias wsl_stop='wsl.exe --shutdown'

# Docker
alias dcstart='_ service docker start'
alias dcstop='_ service docker stop'
alias dc='docker'
alias dcr='dc run'
alias dcrmall='dc rm $(dc ps -aq) -f'
alias dcirmall="dirm $(docker image ls -aq) -f"

dcpush() {
  LOCAL_IMG=$1
  TAG_IMG=$2:$3
  IMG="${2}:latest"

  docker tag $LOCAL_IMG $TAG_IMG
  docker tag $LOCAL_IMG $IMG

  docker push $TAG_IMG
  docker push $IMG
}

# Docker Compose
alias dcb='docker compose build'
alias dcup='docker compose up'
alias dcostart='docker compose start'
alias dcostop='docker compose stop'

#Java/Maven
alias mutjava='mvn org.pitest:pitest-maven:mutationCoverage | grep -E "Killed | Line Coverage"'

# NPM
alias ni='npm install'

# Python
alias pyr='python3'
alias ppf='pip freeze'
alias venvs='ls ~/.venvs'
alias ppff='pip freeze >'
alias ppif='pip install -r'
alias ppi='pip install'
alias ppuf='pip uninstall -r'
alias pyt='pytest'
alias pytv='pytest -vv'

pve() {
  source $1/bin/activate
  which python
}

pvef() {
  venv_path=$(ls --color=never ~/.venvs/ | fzf)
  source ~/.venvs/"$venv_path"/bin/activate
  which python
}

#Minikube
alias minikube="~/.MyConfigs/minikube"
alias mkstart="minikube start"
alias mkstop="minikube stop"
alias mkstatus="minikube status"

#Kubectl
alias kubens="k ns"
alias kubectx="k ctx"

# Utils
tob64() {
  echo -n "$1" | base64
}

cpp() {
  gcc -o $1 $1.cpp -lm -lstdc++ && ./$1
}

# Jenkins
alias ngrok="dcr -it --rm --name=ngrok -e NGROK_AUTHTOKEN=$NGROK_TOKEN --net=host ngrok/ngrok http 8080"
alias jkstart="dcr -d --name=alpineSocat --restart=always -p 127.0.0.1:2376:2375 --network jenkins -v /var/run/docker.sock:/var/run/docker.sock alpine/socat tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock && jenkins"

# SDKMAN configuration
# alias java_mode="export SDKMAN_DIR="$HOME/.sdkman" && [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh""

# NVM configuration
# nvm_mode() {
#   export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#   [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# }

# Pyenv configuration
# pyenv_mode() {
#   export PYENV_ROOT="$HOME/.pyenv"
#   command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
#   eval "$(pyenv init -)"
# }
